import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}


apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

def gradleLocalProperties = new Properties()

try {
    gradleLocalProperties.load(new FileInputStream(rootProject.file("gradle-local.properties")))
} catch (FileNotFoundException ignored) {
    println("gradle-local.properties not found. Setting default values.")
}

group project.property("group")
version project.property("version")

repositories {
    mavenCentral()
    maven {
        url = "https://repo.georgev22.com/releases"
    }
}

dependencies {
    // Mavens
    implementation 'org.apache.maven:maven-resolver-provider:3.9.9'
    implementation 'org.apache.maven.resolver:maven-resolver-connector-basic:1.9.18'
    implementation 'org.apache.maven.resolver:maven-resolver-transport-http:1.9.21'

    compileOnly 'org.apache.commons:commons-compress:1.26.1'
    compileOnly 'com.google.guava:guava:33.2.1-jre'
    compileOnly 'commons-lang:commons-lang:2.6'
    compileOnly 'com.google.code.gson:gson:2.10.1'
    compileOnly 'com.github.oshi:oshi-core:6.6.0'
    compileOnly 'org.jfree:jfreechart:1.5.4'
    compileOnly "com.georgev22.library:yaml:11.23.0"
    compileOnly 'com.formdev:flatlaf:3.4.1'
    compileOnly 'com.formdev:flatlaf-intellij-themes:3.4.1'
    compileOnly 'org.jetbrains:annotations:24.1.0'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.23.1'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.23.1'
    compileOnly 'org.jline:jline:3.26.2'

    testImplementation platform('org.junit:junit-bom:5.10.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

shadowJar {
    archiveClassifier.set('')
    archiveVersion.set('')
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.georgev22.cosmicjars.Main',
                "Version": project.version,
                "Git-Repo": "https://github.com/GeorgeV220/cosmicjars",
                "Build-Timestamp": new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())
        )
    }
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

defaultTasks 'build'
